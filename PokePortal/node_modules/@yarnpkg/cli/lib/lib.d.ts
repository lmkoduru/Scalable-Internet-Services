/// <reference types="node" />
import { CommandContext, PluginConfiguration } from '@yarnpkg/core';
import { PortablePath } from '@yarnpkg/fslib';
import { Cli } from 'clipanion';
export type YarnCli = ReturnType<typeof getBaseCli>;
declare function getBaseCli({ cwd, pluginConfiguration }: {
    cwd: PortablePath;
    pluginConfiguration: PluginConfiguration;
}): Cli<CommandContext> & {
    defaultContext: {
        cwd: PortablePath;
        plugins: PluginConfiguration;
        quiet: boolean;
        stdin: NodeJS.ReadStream & {
            fd: 0;
        };
        stdout: NodeJS.WriteStream & {
            fd: 1;
        };
        stderr: NodeJS.WriteStream & {
            fd: 2;
        };
        env: NodeJS.ProcessEnv;
        colorDepth: number;
    };
};
export declare function getCli({ cwd, pluginConfiguration }?: {
    cwd?: PortablePath;
    pluginConfiguration?: PluginConfiguration;
}): Promise<Cli<CommandContext> & {
    defaultContext: {
        cwd: PortablePath;
        plugins: PluginConfiguration;
        quiet: boolean;
        stdin: NodeJS.ReadStream & {
            fd: 0;
        };
        stdout: NodeJS.WriteStream & {
            fd: 1;
        };
        stderr: NodeJS.WriteStream & {
            fd: 2;
        };
        env: NodeJS.ProcessEnv;
        colorDepth: number;
    };
}>;
export declare function runExit(argv: Array<string>, { cwd, selfPath, pluginConfiguration }: {
    cwd: PortablePath;
    selfPath: PortablePath | null;
    pluginConfiguration: PluginConfiguration;
}): Promise<void>;
export {};
