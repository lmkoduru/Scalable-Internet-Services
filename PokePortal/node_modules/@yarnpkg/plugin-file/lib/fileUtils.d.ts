/// <reference types="node" />
import { FetchOptions, Locator, Ident } from '@yarnpkg/core';
import { PortablePath } from '@yarnpkg/fslib';
import { ZipFS } from '@yarnpkg/libzip';
export declare function parseSpec(spec: string): {
    parentLocator: Locator | null;
    path: PortablePath;
};
export declare function makeSpec({ parentLocator, path, hash, protocol }: {
    parentLocator: Locator | null;
    path: string;
    hash?: string;
    protocol: string;
}): string;
export declare function makeLocator(ident: Ident, { parentLocator, path, hash, protocol }: Parameters<typeof makeSpec>[number]): Locator;
export declare function fetchArchiveFromLocator(locator: Locator, opts: FetchOptions): Promise<Buffer>;
export declare function makeArchiveFromLocator(locator: Locator, { protocol, fetchOptions, inMemory }: {
    protocol: string;
    fetchOptions: FetchOptions;
    inMemory?: boolean;
}): Promise<ZipFS>;
export declare function makeBufferFromLocator(locator: Locator, { protocol, fetchOptions }: {
    protocol: string;
    fetchOptions: FetchOptions;
}): Promise<Buffer>;
