"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cli_1 = require("@yarnpkg/cli");
const core_1 = require("@yarnpkg/core");
const clipanion_1 = require("clipanion");
// eslint-disable-next-line arca/no-default-export
class ClipanionCommand extends cli_1.BaseCommand {
    async execute() {
        const { plugins } = await core_1.Configuration.find(this.context.cwd, this.context.plugins);
        const pluginDefinitions = [];
        for (const plugin of plugins) {
            const { commands } = plugin[1];
            if (commands) {
                const cli = clipanion_1.Cli.from(commands);
                const definitions = cli.definitions();
                pluginDefinitions.push([plugin[0], definitions]);
            }
        }
        const clipanionDefinitions = this.cli.definitions();
        const arePathsEqual = (path1, path2) => path1.split(` `).slice(1).join() === path2.split(` `).slice(1).join();
        const defaultPlugins = require(`@yarnpkg/cli/package.json`)[`@yarnpkg/builder`].bundles.standard;
        for (const pluginDefinition of pluginDefinitions) {
            const definitions = pluginDefinition[1];
            for (const definition of definitions) {
                clipanionDefinitions
                    .find(clipanionDefinition => arePathsEqual(clipanionDefinition.path, definition.path))
                    .plugin = {
                    name: pluginDefinition[0],
                    isDefault: defaultPlugins.includes(pluginDefinition[0]),
                };
            }
        }
        this.context.stdout.write(`${JSON.stringify(clipanionDefinitions, null, 2)}\n`);
    }
}
ClipanionCommand.paths = [
    [`--clipanion=definitions`],
];
exports.default = ClipanionCommand;
