"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cli_1 = require("@yarnpkg/cli");
const core_1 = require("@yarnpkg/core");
const core_2 = require("@yarnpkg/core");
const clipanion_1 = require("clipanion");
// eslint-disable-next-line arca/no-default-export
class WorkspaceCommand extends cli_1.BaseCommand {
    constructor() {
        super(...arguments);
        this.workspaceName = clipanion_1.Option.String();
        this.commandName = clipanion_1.Option.String();
        this.args = clipanion_1.Option.Proxy();
    }
    async execute() {
        const configuration = await core_1.Configuration.find(this.context.cwd, this.context.plugins);
        const { project, workspace: cwdWorkspace } = await core_1.Project.find(configuration, this.context.cwd);
        if (!cwdWorkspace)
            throw new cli_1.WorkspaceRequiredError(project.cwd, this.context.cwd);
        const candidates = project.workspaces;
        const candidatesByName = new Map(candidates.map(workspace => [core_2.structUtils.stringifyIdent(workspace.anchoredLocator), workspace]));
        const workspace = candidatesByName.get(this.workspaceName);
        if (workspace === undefined) {
            const otherNames = Array.from(candidatesByName.keys()).sort();
            throw new clipanion_1.UsageError(`Workspace '${this.workspaceName}' not found. Did you mean any of the following:\n  - ${otherNames.join(`\n  - `)}?`);
        }
        return this.cli.run([this.commandName, ...this.args], { cwd: workspace.cwd });
    }
}
WorkspaceCommand.paths = [
    [`workspace`],
];
WorkspaceCommand.usage = clipanion_1.Command.Usage({
    category: `Workspace-related commands`,
    description: `run a command within the specified workspace`,
    details: `
      This command will run a given sub-command on a single workspace.
    `,
    examples: [[
            `Add a package to a single workspace`,
            `yarn workspace components add -D react`,
        ], [
            `Run build script on a single workspace`,
            `yarn workspace components run build`,
        ]],
});
exports.default = WorkspaceCommand;
