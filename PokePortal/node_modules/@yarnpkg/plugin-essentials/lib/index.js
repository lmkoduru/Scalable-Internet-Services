"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.suggestUtils = exports.dedupeUtils = exports.WorkspaceCommand = exports.WorkspacesListCommand = exports.WhyCommand = exports.UpCommand = exports.UnlinkCommand = exports.SetVersionCommand = exports.SetVersionSourcesCommand = exports.SetResolutionCommand = exports.RunCommand = exports.RunIndexCommand = exports.RemoveCommand = exports.RebuildCommand = exports.PluginRuntimeCommand = exports.PluginRemoveCommand = exports.PluginListCommand = exports.PluginImportCommand = exports.PluginCheckCommand = exports.PluginImportSourcesCommand = exports.NodeCommand = exports.LinkCommand = exports.YarnCommand = exports.InfoCommand = exports.ExplainCommand = exports.ExplainPeerRequirementsCommand = exports.ExecCommand = exports.VersionCommand = exports.EntryCommand = exports.HelpCommand = exports.ClipanionCommand = exports.DedupeCommand = exports.ConfigCommand = exports.ConfigUnsetCommand = exports.ConfigSetCommand = exports.ConfigGetCommand = exports.CacheCleanCommand = exports.BinCommand = exports.AddCommand = void 0;
const tslib_1 = require("tslib");
const core_1 = require("@yarnpkg/core");
const ci_info_1 = require("ci-info");
const add_1 = tslib_1.__importDefault(require("./commands/add"));
exports.AddCommand = add_1.default;
const bin_1 = tslib_1.__importDefault(require("./commands/bin"));
exports.BinCommand = bin_1.default;
const clean_1 = tslib_1.__importDefault(require("./commands/cache/clean"));
exports.CacheCleanCommand = clean_1.default;
const get_1 = tslib_1.__importDefault(require("./commands/config/get"));
exports.ConfigGetCommand = get_1.default;
const set_1 = tslib_1.__importDefault(require("./commands/config/set"));
exports.ConfigSetCommand = set_1.default;
const unset_1 = tslib_1.__importDefault(require("./commands/config/unset"));
exports.ConfigUnsetCommand = unset_1.default;
const config_1 = tslib_1.__importDefault(require("./commands/config"));
exports.ConfigCommand = config_1.default;
const dedupe_1 = tslib_1.__importDefault(require("./commands/dedupe"));
exports.DedupeCommand = dedupe_1.default;
const clipanion_1 = tslib_1.__importDefault(require("./commands/entries/clipanion"));
exports.ClipanionCommand = clipanion_1.default;
const help_1 = tslib_1.__importDefault(require("./commands/entries/help"));
exports.HelpCommand = help_1.default;
const run_1 = tslib_1.__importDefault(require("./commands/entries/run"));
exports.EntryCommand = run_1.default;
const version_1 = tslib_1.__importDefault(require("./commands/entries/version"));
exports.VersionCommand = version_1.default;
const exec_1 = tslib_1.__importDefault(require("./commands/exec"));
exports.ExecCommand = exec_1.default;
const peerRequirements_1 = tslib_1.__importDefault(require("./commands/explain/peerRequirements"));
exports.ExplainPeerRequirementsCommand = peerRequirements_1.default;
const explain_1 = tslib_1.__importDefault(require("./commands/explain"));
exports.ExplainCommand = explain_1.default;
const info_1 = tslib_1.__importDefault(require("./commands/info"));
exports.InfoCommand = info_1.default;
const install_1 = tslib_1.__importDefault(require("./commands/install"));
exports.YarnCommand = install_1.default;
const link_1 = tslib_1.__importDefault(require("./commands/link"));
exports.LinkCommand = link_1.default;
const node_1 = tslib_1.__importDefault(require("./commands/node"));
exports.NodeCommand = node_1.default;
const check_1 = tslib_1.__importDefault(require("./commands/plugin/check"));
exports.PluginCheckCommand = check_1.default;
const sources_1 = tslib_1.__importDefault(require("./commands/plugin/import/sources"));
exports.PluginImportSourcesCommand = sources_1.default;
const import_1 = tslib_1.__importDefault(require("./commands/plugin/import"));
exports.PluginImportCommand = import_1.default;
const list_1 = tslib_1.__importDefault(require("./commands/plugin/list"));
exports.PluginListCommand = list_1.default;
const remove_1 = tslib_1.__importDefault(require("./commands/plugin/remove"));
exports.PluginRemoveCommand = remove_1.default;
const runtime_1 = tslib_1.__importDefault(require("./commands/plugin/runtime"));
exports.PluginRuntimeCommand = runtime_1.default;
const rebuild_1 = tslib_1.__importDefault(require("./commands/rebuild"));
exports.RebuildCommand = rebuild_1.default;
const remove_2 = tslib_1.__importDefault(require("./commands/remove"));
exports.RemoveCommand = remove_2.default;
const runIndex_1 = tslib_1.__importDefault(require("./commands/runIndex"));
exports.RunIndexCommand = runIndex_1.default;
const run_2 = tslib_1.__importDefault(require("./commands/run"));
exports.RunCommand = run_2.default;
const resolution_1 = tslib_1.__importDefault(require("./commands/set/resolution"));
exports.SetResolutionCommand = resolution_1.default;
const sources_2 = tslib_1.__importDefault(require("./commands/set/version/sources"));
exports.SetVersionSourcesCommand = sources_2.default;
const version_2 = tslib_1.__importDefault(require("./commands/set/version"));
exports.SetVersionCommand = version_2.default;
const unlink_1 = tslib_1.__importDefault(require("./commands/unlink"));
exports.UnlinkCommand = unlink_1.default;
const up_1 = tslib_1.__importDefault(require("./commands/up"));
exports.UpCommand = up_1.default;
const why_1 = tslib_1.__importDefault(require("./commands/why"));
exports.WhyCommand = why_1.default;
const list_2 = tslib_1.__importDefault(require("./commands/workspaces/list"));
exports.WorkspacesListCommand = list_2.default;
const workspace_1 = tslib_1.__importDefault(require("./commands/workspace"));
exports.WorkspaceCommand = workspace_1.default;
const dedupeUtils = tslib_1.__importStar(require("./dedupeUtils"));
exports.dedupeUtils = dedupeUtils;
const suggestUtils = tslib_1.__importStar(require("./suggestUtils"));
exports.suggestUtils = suggestUtils;
const plugin = {
    configuration: {
        enableImmutableInstalls: {
            description: `If true (the default on CI), prevents the install command from modifying the lockfile`,
            type: core_1.SettingsType.BOOLEAN,
            default: ci_info_1.isCI,
        },
        defaultSemverRangePrefix: {
            description: `The default save prefix: '^', '~' or ''`,
            type: core_1.SettingsType.STRING,
            values: [`^`, `~`, ``],
            default: suggestUtils.Modifier.CARET,
        },
        preferReuse: {
            description: `If true, \`yarn add\` will attempt to reuse the most common dependency range in other workspaces.`,
            type: core_1.SettingsType.BOOLEAN,
            default: false,
        },
    },
    commands: [
        clean_1.default,
        get_1.default,
        set_1.default,
        unset_1.default,
        resolution_1.default,
        sources_2.default,
        version_2.default,
        list_2.default,
        clipanion_1.default,
        help_1.default,
        run_1.default,
        version_1.default,
        add_1.default,
        bin_1.default,
        config_1.default,
        dedupe_1.default,
        exec_1.default,
        peerRequirements_1.default,
        explain_1.default,
        info_1.default,
        install_1.default,
        link_1.default,
        unlink_1.default,
        node_1.default,
        check_1.default,
        sources_1.default,
        import_1.default,
        remove_1.default,
        list_1.default,
        runtime_1.default,
        rebuild_1.default,
        remove_2.default,
        runIndex_1.default,
        run_2.default,
        up_1.default,
        why_1.default,
        workspace_1.default,
    ],
};
// eslint-disable-next-line arca/no-default-export
exports.default = plugin;
