import { Plugin, Project } from '@yarnpkg/core';
import { PortablePath } from '@yarnpkg/fslib';
import { PatchFetcher } from './PatchFetcher';
import { PatchResolver } from './PatchResolver';
import PatchCommitCommand from './commands/patchCommit';
import PatchCommand from './commands/patch';
import * as patchUtils from './patchUtils';
export { PatchFetcher };
export { PatchResolver };
export { PatchCommitCommand };
export { PatchCommand };
export { patchUtils };
export interface Hooks {
    /**
     * Registers a builtin patch that can be referenced using the dedicated
     * syntax: `patch:builtin<name>`. This is for instance how the TypeScript
     * patch is automatically registered.
     */
    getBuiltinPatch?: (project: Project, name: string) => Promise<string | null | void>;
}
declare module '@yarnpkg/core' {
    interface ConfigurationValueMap {
        enableInlineHunks: boolean;
        patchFolder: PortablePath;
    }
}
declare const plugin: Plugin;
export default plugin;
